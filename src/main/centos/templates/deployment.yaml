apiVersion: apps/v1  # API 版本
kind: Deployment  # 资源类型
metadata:
  name: {{ include "centos.fullname" . }}  # 部署名称，使用模板函数生成
  labels:
    {{- include "centos.labels" . | nindent 4 }}  # 部署标签，使用模板函数生成
spec:
  replicas: {{ .Values.replicaCount }}  # 副本数量，从 values.yaml 中获取
  selector:
    matchLabels:
      {{- include "centos.selectorLabels" . | nindent 6 }}  # 选择器标签，使用模板函数生成
  template:
    metadata:
      labels:
        {{- include "centos.selectorLabels" . | nindent 8 }}  # Pod 标签，使用模板函数生成
    spec:
      containers:
        - name: {{ .Chart.Name }}  # 容器名称，使用 Chart 名称
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"  # 容器镜像，从 values.yaml 中获取
          imagePullPolicy: {{ .Values.image.pullPolicy }}  # 镜像拉取策略，从 values.yaml 中获取
          command: ["/bin/bash", "-c", "--"]  # 容器启动命令，启动一个 Bash 终端
          args: ["while true; do sleep 30; done;"]  # 容器启动参数，使容器保持运行状态
          resources:
            {{- toYaml .Values.resources | nindent 12 }}  # 资源限制，从 values.yaml 中获取
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - |
                    # 安装指定的工具包
                    dnf update -y && \
                    dnf install -y {{- range .Values.tools }} {{ . }}{{ end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}  # 节点选择器，从 values.yaml 中获取
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}  # 容忍，从 values.yaml 中获取
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}  # 亲和性，从 values.yaml 中获取
