apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mysql.fullname" . }}
  labels:
    {{- include "mysql.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "mysql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mysql.labels" . | nindent 8 }}
        {{- include "mysql.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        fsGroup: 999
      initContainers:
        - name: init-mysql
          image: busybox:1.28
          command: ['sh', '-c', 'mkdir -p /var/run/mysqld; chmod 777 /var/run/mysqld']
          volumeMounts:
            - name: run-mysql
              mountPath: /var/run/mysqld
      containers:
        - name: mysql
          image: "{{ .Values.image.imageRegistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          securityContext:
            runAsUser: 999
            runAsGroup: 999
          ports:
            - containerPort: 3306
              name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ .Values.mysql.rootPassword | quote }}
            {{- if kindIs "array" .Values.env }}
            {{- range .Values.env }}
            - name: "{{ .name }}"
              value: "{{ .value }}"
            {{- end }}
            {{- else if kindIs "map" .Values.env }}
            {{- range $key, $value := .Values.env }}
            - name: "{{ $value.name }}"
              value: "{{ $value.value }}"
            {{- end }}
            {{- end }}
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory | default '512Mi' }}"
              cpu: "{{ .Values.resources.requests.cpu | default '500m' }}"
            limits:
              memory: "{{ .Values.resources.limits.memory | default '1024Mi' }}"
              cpu: "{{ .Values.resources.limits.cpu | default '1000m' }}"
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: mysql-config
              mountPath: /etc/mysql/my.cnf
              subPath: my.cnf
            - name: run-mysql
              mountPath: /var/run/mysqld
          livenessProbe:
            exec:
              command: ["mysqladmin", "ping", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: ["mysql", "-uroot", "-p${MYSQL_ROOT_PASSWORD}", "-e", "SELECT 1"]
            initialDelaySeconds: 30
            periodSeconds: 2
            timeoutSeconds: 1
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: {{ include "mysql.fullname" . }}-pvc
        - name: mysql-config
          configMap:
            name: {{ include "mysql.fullname" . }}-config
        - name: run-mysql
          emptyDir: {}
