#  Copyright (C) 2018 Yunify, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this work except in compliance with the License.
#  You may obtain a copy of the License in the LICENSE file, or at:
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-qingcloud-node
  namespace: {{ .Release.Namespace }}
  labels:
    app: csi-qingcloud
    role: node
    owner: yunify
    ver: {{ include "driver.version" . }}
spec:
  selector:
    matchLabels:
      app: csi-qingcloud
      role: node
      owner: yunify
      ver: {{ include "driver.version" . }}
  template:
    metadata:
      labels:
        app: csi-qingcloud
        role: node
        owner: yunify
        ver: {{ include "driver.version" . }}
    spec:
      serviceAccount: csi-qingcloud-node
      tolerations:
      {{- range .Values.tolerations }}
      - {{- . | toYaml | nindent 8 -}}
      {{- end }}
      hostNetwork: true
      containers:
        - name: node-registrar
          image: "{{ .Values.registrar.repository }}:{{ .Values.registrar.tag }}"
          resources:
            limits:
              memory: "{{ .Values.registrar.resources.limits.memory }}"
              cpu: "{{ .Values.registrar.resources.limits.cpu }}"
            requests:
              memory: "{{ .Values.registrar.resources.requests.memory }}"
              cpu: "{{ .Values.registrar.resources.requests.cpu }}"
          args:
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path={{ .Values.driver.kubeletDir }}/plugins/{{ .Values.driver.name }}/csi.sock"
            - "--v=5"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          lifecycle:
            preStop:
              exec:
                command: [
                  "/bin/sh", "-c",
                  "rm -rf /registration/{{ .Values.driver.name | replace " " "" }} \
                  /registration/{{ .Values.driver.name | replace " " "" }}-reg.sock"]
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: csi-qingcloud
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: "{{ .Values.driver.repository }}:{{ include "driver.version" . }}"
          resources:
            limits:
              memory: "{{ .Values.node.resources.limits.memory }}"
              cpu: "{{ .Values.node.resources.limits.cpu }}"
            requests:
              memory: "{{ .Values.node.resources.requests.memory }}"
              cpu: "{{ .Values.node.resources.requests.cpu }}"
          args :
            - "--config=/etc/config/config.yaml"
            - "--drivername={{ .Values.driver.name }}"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--maxvolume={{ .Values.driver.maxVolume }}"
            - "--nodeid=$(NODE_ID)"
            - "--v=5"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix://csi/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - mountPath: {{ .Values.driver.kubeletDir }}
              mountPropagation: Bidirectional
              name: kubelet-dir
            - name: socket-dir
              mountPath: /csi
            - name: dev-dir
              mountPath: /dev
              mountPropagation: "HostToContainer"
            - name: instance-id
              mountPath: /etc/qingcloud
              readOnly: true
            - name: server-config
              mountPath: /etc/config
      volumes:
        - name: kubelet-dir
          hostPath:
            path: {{ .Values.driver.kubeletDir }}
        - name: socket-dir
          hostPath:
            path: "{{ .Values.driver.kubeletDir }}/plugins/{{ .Values.driver.name }}/"
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: {{ .Values.driver.kubeletDir }}/plugins_registry/
        - name: dev-dir
          hostPath:
            path: /dev
            type: Directory
        - name: instance-id
          hostPath:
            path: /etc/qingcloud
        - name: server-config
          configMap:
            name: csi-qingcloud
